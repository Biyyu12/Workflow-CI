name: MLflow Retrain

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
permissions:
  contents: write
  
env:
  CSV_URL: "./MLProject/loan_data_preprocessed.csv"

jobs:
  build:
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"
          
      - name: Check Env
        run: |
          echo "CSV_URL: $CSV_URL"
          
      - name: Install MLflow and dependencies
        run: |
          pip install mlflow
          if [ -f MLProject/requirements.txt ]; then
            pip install -r MLProject/requirements.txt
          fi
          
      - name: Run MLflow project
        run: |
          mlflow run ./MLProject --env-manager=local -P dataset=$CSV_URL
          
      - name: Create model artifacts directory if not exists
        run: |
          mkdir -p MLProject/model_artifacts
          
      - name: Check if files exist
        run: |
          echo "Checking mlruns directory:"
          ls -la mlruns/ || echo "mlruns directory not found"
          echo "Checking model artifacts:"
          ls -la MLProject/model_artifacts/ || echo "model_artifacts directory not found"
          
      - name: Commit and push changes
        run: |
          git config --global user.name "${{ secrets.USERNAME }}"
          git config --global user.email "${{ secrets.EMAIL }}"
          
          # Add all changes
          git add mlruns/ MLProject/model_artifacts/
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update mlruns and model artifacts from CI run [skip ci]"
            git push origin main
          fi
          
      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: MLProject/model_artifacts/
          if-no-files-found: warn
